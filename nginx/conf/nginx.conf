# -----------------------------------------------------------------------------
# This is a standard nginx.conf of ngx_4c
# 	- require ngx_cc communication framework
#	- need one shared_dict, default name 'ngxcc_dict'
# 	- accept_mutex must off (required by per-worker-listener)
#
# Usage:
# 	> sudo ./nginx -p ~/ngx_4c/nginx
# -----------------------------------------------------------------------------

user nobody;
worker_processes 4;

#error_log  logs/error.log  debug;
#pid		logs/nginx.pid;

events {
	worker_connections  10240;
	accept_mutex off;
}

http {
	## path&dict config
	lua_package_path '$prefix../?.lua;$prefix../lib/ngx_cc/?.lua;;';
	lua_shared_dict ngxcc_dict 10M;
	uninitialized_variable_warn off;

	## n4c core framework and runtime
	# ------------------------------------
	# init global n4c setting and n4c.startWorker() launcher
	init_by_lua_file '../init.lua';

	# init for per-worker
	init_worker_by_lua 'n4c.startWorker();';	# -- Init Worker Processes

	# standard handles
	rewrite_by_lua 'n4c.doRequestBegin();';		# -- On Request Begin
	body_filter_by_lua 'n4c.doBodyFilter();';	# -- On Response Chunks Filter
	log_by_lua 'n4c.doSessionClose();';			# -- On Request End and Close Session 
	# ------------------------------------

	server {
		listen 80;
		listen 8000 per_worker;
		server_name localhost;

		## caster, internal only
		location ~ ^/([^/]+)/cast {
			internal;
			set_by_lua $cc_host 'return ngx.var.cc_host';
			set_by_lua $cc_port 'local p = ngx.var.cc_port or ""; return (p=="" or p=="80") and "" or ":"..p;';

			## n4c core: ngx_cc internal check saved
			set_by_lua $saved_uri 'return ngx.var.uri..ngx.var.is_args..(ngx.var.args or "")';

			rewrite ^/([^/]+)/cast/(.*)$ /$2 break;
			rewrite ^/([^/]+)/cast([^/]*)$ /$1/invoke$2 break;

			## n4c core: cc_headers custom support
			rewrite_by_lua 'n4c.doRequestBegin(true);';

			## optional: keepalive support
			# proxy_http_version "1.1";
			# proxy_set_header Connection "";

			proxy_pass http://$cc_host$cc_port;
			proxy_read_timeout		2s;
			proxy_send_timeout		2s;
			proxy_connect_timeout	2s;
		}

		## invoke at worker listen port
		location ~ ^/([^/]+)/invoke {
			content_by_lua 'ngx_cc.invokes(ngx.var[1])';
		}

		## hub at main listen port(80), will redirect to route listen port
		location ~ ^/([^/]+)/hub {
			content_by_lua 'ngx_cc.invokes(ngx.var[1], true)';
		}
	}
}
